module divider(clk, rst, N, D, QO, RO);

    parameter INPUT_SIZE = 10;
    parameter COUNTER_SIZE = 10;

    input clk, rst;
    input [INPUT_SIZE-1 : 0] N, D;
    output [INPUT_SIZE-1 : 0] QO, RO;
    wire [INPUT_SIZE-1 : 0] NO;
    wire [COUNTER_SIZE-1 : 0] IO;

    wire [INPUT_SIZE-1 : 0] combinationalQout;
    wire [INPUT_SIZE-1 : 0] combinationalRout;
    wire [INPUT_SIZE-1 : 0] combinationalNout;
    wire [COUNTER_SIZE-1 : 0] combinationalIout;
    register #(INPUT_SIZE) r1(clk, rst, {INPUT_SIZE{1'b0}}, combinationalQout, QO);
    register #(INPUT_SIZE) r2(clk, rst, {INPUT_SIZE{1'b0}}, combinationalRout, RO);
    register #(INPUT_SIZE) r3(clk, rst,  N, combinationalNout, NO);
    register #(COUNTER_SIZE) r4(clk, rst, {COUNTER_SIZE{1'b0}}, combinationalIout, IO);
    _4divider #(INPUT_SIZE, COUNTER_SIZE) C1(NO, D, RO, QO, IO, combinationalNout, combinationalQout, combinationalRout, combinationalIout);

endmodule